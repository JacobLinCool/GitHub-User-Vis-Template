(function(){"use strict";const l={go:"go",kt:"kotlin",java:"java",js:"javascript",mjs:"javascript",cjs:"javascript",jsx:"javascript",ts:"typescript",tsx:"typescript",c:"c",cc:"c++",cxx:"c++",cpp:"c++","c++":"c++",h:"c",hh:"c++",hxx:"c++",hpp:"c++",cs:"c#",dart:"dart",erl:"erlang",hrl:"erlang",ex:"elixir",hs:"haskell",html:"html",htm:"html",css:"css",less:"less",scss:"scss",sass:"sass",lua:"lua",ml:"ocaml",php:"php",py:"python",ipynb:"python",rb:"ruby",rs:"rust",sh:"shell",ps1:"powershell",swift:"swift",md:"markdown",mdx:"markdown",markdown:"markdown",svelte:"svelte",vue:"vue",dockerfile:"docker",vbs:"vbscript",frm:"visualbasic",frx:"visualbasic",bas:"visualbasic",cls:"visualbasic",vb:"visualbasic",vba:"visualbasic",vbp:"visualbasic",vbw:"visualbasic",prisma:"prisma"},p={test:[/.*\.test\..*$/i],docs:[/.*\.(md|mdx|markdown)/i],ci:[/^\.github\/workflows\/.*\.yml$/i,/^\.circleci\/config\.yml$/i,/^\.gitlab-ci\.yml$/i],code:[/.*\.(go|kt|java|js|mjs|cjs|jsx|ts|tsx|c|cc|cxx|cpp|c\+\+|h|hh|hxx|hpp|cs|dart|erl|hrl|ex|hs|html|htm|css|less|scss|sass|lua|ml|vbs|php|py|ipynb|rb|rs|sh|ps1|bat|cmd|prisma|swift|md|mdx|svelte|vue|dockerfile|frm|frx|bas|cls|vb|vba|vbp|vbw)$/i],undefined:[/\.git.*$/i,/\..*?ignore$/i,/\..*?rc$/i,/\.mca$/i,/\.(lock|json|toml|yaml|yml|map)$/i,/\.(png|jpg|jpeg|gif|svg|ico|webp)$/i,/\.(eot|ttf|woff|woff2|otf)$/i,/\.(mp3|m4a|mp4|webm|ogg|wav|midi|m3u8|mov)$/i,/\.(exe|bin|o|a|out|so|dll|lib|obj|jar|dat)$/i,/\.(zip|tar|rar|gz|7z|bz2|iso|dmg|npy|ä¸‹è¼‰)$/i,/\.(txt|srt|vtt|log|csv|tsv|xml|pdf|doc|docx|xls|xlsx|ppt|pptx)#?$/i,/\.env.example$/i,/\.(DS_Store|clang-format|nojekyll|cargo-ok|replit)$/i,/^(.+\/)?[^/.]+$/]},f=new Set;function m(t){var e;const s=((e=t.split("/").reverse()[0].split(".").pop())==null?void 0:e.toLowerCase())||"";return l[s]||"unknown"}function u(t){for(const[s,a]of Object.entries(p))for(const e of a)if(e.test(t))return s==="undefined"?void 0:s;return f.add(t),"unknown"}const c="../../..";let o;async function d(){if(!o){o=await fetch(`${c}/data/commits.json`).then(t=>t.json());for(const t of Object.values(o))for(const s of t){s.date=new Date(s.date),s.langs={};for(const a of s.files){const e=m(a);s.langs[e]||(s.langs[e]=0),s.langs[e]++}s.types={};for(const a of s.files){const e=u(a);!e||(s.types[e]||(s.types[e]=0),s.types[e]++)}}}return o}let n;async function v(){if(!n){n=await fetch(`${c}/data/issues.json`).then(t=>t.json());for(const t of Object.values(n))for(const s of t)s.created=new Date(s.created)}return n}let r;async function g(){return r||(r=await fetch(`${c}/data/repos.json`).then(t=>t.json())),r}let i;async function h(){return i||(i=await fetch(`${c}/data/user.json`).then(t=>t.json()),i.created=new Date(i.created)),i}onmessage=async t=>{const{id:s,type:a}=t.data;a==="commits"?postMessage({id:s,data:await d()}):a==="issues"?postMessage({id:s,data:await v()}):a==="repos"?postMessage({id:s,data:await g()}):a==="user"&&postMessage({id:s,data:await h()})}})();
